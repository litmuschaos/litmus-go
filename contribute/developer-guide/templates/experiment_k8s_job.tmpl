---
apiVersion: batch/v1
kind: Job
metadata:
  generateName: {{ name }}-
spec:
  template:
    metadata:
      labels:
        experiment: {{ name }}
    spec:
      # Placeholder that is updated by the executor for automated runs
      # Provide appropriate SA (with desired permissions) if executed manually
      serviceAccountName: %CHAOS_SERVICE_ACCOUNT%
      restartPolicy: Never
      containers:
      - name: gotest
        image: litmuschaos/litmus-go:ci
        imagePullPolicy: Always
        env:
          - name: ANSIBLE_STDOUT_CALLBACK
            value: 'default'

          - name: APP_NAMESPACE
            value: ''

          - name: APP_LABEL
            value: ''

          - name: APP_KIND
            value: '' 

          - name: TOTAL_CHAOS_DURATION
            value: ''
          
          # provide auxiliary application details - namespace and labels of the applications
          # sample input is - "ns1:app=percona,ns2:name=nginx"
          - name: AUXILIARY_APPINFO
            value: ''

          ## Period to wait before injection of chaos in sec
          - name: RAMP_TIME
            value: ''

          ## env var that describes the library used to execute the chaos
          ## default: litmus. Supported values: litmus, powerfulseal, chaoskube
          - name: LIB
            value: ''

          # provide the chaos namespace
          - name: CHAOS_NAMESPACE
            value: ''
        
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name

          - name: CHAOS_SERVICE_ACCOUNT
            valueFrom:
              fieldRef:
                fieldPath: spec.serviceAccountName

        command: ["/bin/bash"]
        args: ["-c", "./experiments/{{ name }}"]