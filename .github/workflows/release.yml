---
name: Release
on:
  create:
    tags:
      - 'v*'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      # Install golang
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.13.1'

      # Setup gopath
      - name: Setting up GOPATH 
        run: |
          echo "GOPATH=${GITHUB_WORKSPACE}/go" >> $GITHUB_ENV
          
      # Checkout to the latest commit
      # On specific directory/path
      - uses: actions/checkout@v2
        with:
          path: go/src/github.com/${{github.repository}}

      #TODO: Add Dockerfile linting
      # Running go-lint
      - name: Checking Go-Lint
        run : |
          sudo apt-get update && sudo apt-get install golint
          cd go/src/github.com/${{github.repository}}
          make gotasks

  push:
    runs-on: ubuntu-latest
    steps:

      # Install golang
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.13.1'

      # Setup gopath
      - name: Setting up GOPATH 
        run: |
          echo "GOPATH=${GITHUB_WORKSPACE}/go" >> $GITHUB_ENV
          
      # Checkout to the latest commit
      # On specific directory/path
      - uses: actions/checkout@v2
        with:
          path: go/src/github.com/${{github.repository}}

      - name: Set Tag
        run: |
          TAG="${GITHUB_REF#refs/*/v}"
          echo "TAG=${TAG}" >> $GITHUB_ENV
          echo "RELEASE_TAG=${TAG}" >> $GITHUB_ENV

      - name: Print Tag info
        run: |
          echo "RELEASE TAG: ${RELEASE_TAG}"
          echo "${RELEASE_TAG}" > ${{ github.workspace }}/tag.txt
          
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest

      - name: Build Docker Image
        env:
          DOCKER_REPO: litmuschaos
          DOCKER_IMAGE: go-runner
          DOCKER_TAG: ${RELEASE_TAG}
          DNAME: ${{ secrets.DNAME }}
          DPASS: ${{ secrets.DPASS }}
        run: |
          cd go/src/github.com/${{github.repository}}
          make experiment-build

      - name: Push Docker Image
        env:
          DOCKER_REPO: litmuschaos
          DOCKER_IMAGE: go-runner
          DOCKER_TAG: ${RELEASE_TAG}
          DNAME: ${{ secrets.DNAME }}
          DPASS: ${{ secrets.DPASS }}
        run: |
          cd go/src/github.com/${{github.repository}}
          make push

  trivy: 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: setup trivy
        run: |
          wget https://github.com/aquasecurity/trivy/releases/download/v0.11.0/trivy_0.11.0_Linux-64bit.tar.gz
          tar zxvf trivy_0.11.0_Linux-64bit.tar.gz
          make trivy-check
